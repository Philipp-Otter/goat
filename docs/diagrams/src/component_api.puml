@startuml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml

!define DEVICONS https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/devicons
!define FONTAWESOME https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/font-awesome-5

!include FONTAWESOME/vuejs.puml
!include DEVICONS/postgresql.puml


title Component Diagram for GOAT API (C4 Model)

Container(spa, "Single-Page Application", "Javascript and Vue", "Web map interface that the user interacts with", $sprite="vuejs")
Boundary(gb, "API", "Container") {
    Component(routerEndpoints, "Endpoints", "FastAPI Router", "Provides the communication channel for external users for interacting with the CRUD component. It defines a set of rules for the routes, requests and response data types. It uses Pydantic models for validating the request and response payloads. It also includes authentication validation for protected endpoints.")
    Component(pydanticModels, "Schema Models", "Pydantic", "Python classes for validating request payloads and response data types. It uses pydantic library for type annotations. ")
    Component(crudUtilities, "CRUD", "Python Code","The core functionality of the application. It holds the logic for most of the indicators, user management, scenarios etc. It inherits from a generic base class and also uses other helper classes and libaries. For database interactions it relies on ORM models and ORM session. ")
    Component(ormModels, "Database Models", "SQLAlchemy ORM", "Python classes for defining the database tables. It includes table structure, data types, relations etc. ")
}

ContainerDb(db, "Database", "PostgreSQL", "Holds application data (incl. GTFS) and sql functions", $sprite="postgresql")
System_Ext(r5System, "R5 System", "Public transport routing engine")



Rel_D(spa, routerEndpoints, "Makes requests", "JSON/PBF ⇋ HTTPS")
Rel_L(routerEndpoints, pydanticModels, "Uses")
Rel_D(routerEndpoints, crudUtilities, "Uses")
Rel_L(crudUtilities, ormModels, "Uses")
Rel_D(crudUtilities, db, "Reads/Writes", "SQLAlchemy (ORM Session)")
Rel_R(crudUtilities, r5System, "Makes Requests", "BINARY⇋HTTP")


@enduml